{"version":3,"file":"react-rating.umd.min.js","sources":["../src/RatingSymbol.js","../src/Rating.js","../src/utils/noop.js","../src/utils/style.js","../src/RatingAPILayer.js"],"sourcesContent":["import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\n// Return the corresponding React node for an icon.\r\nconst _iconNode = (icon) => {\r\n  // If it is already a React Element just return it.\r\n  if (React.isValidElement(icon)) {\r\n    return icon;\r\n  }\r\n  // If it is an object, try to use it as a CSS style object.\r\n  if (typeof icon === 'object' && icon !== null) {\r\n    return <span style={icon} />;\r\n  }\r\n  // If it is a string, use it as class names.\r\n  if (Object.prototype.toString.call(icon) === '[object String]') {\r\n    return <span className={icon} />;\r\n  }\r\n};\r\n\r\nclass RatingSymbol extends React.PureComponent {\r\n  render() {\r\n    const {\r\n      index,\r\n      inactiveIcon,\r\n      activeIcon,\r\n      percent,\r\n      direction,\r\n      showInactive,\r\n      readonly,\r\n      onClick,\r\n      onMouseMove\r\n    } = this.props;\r\n    const backgroundNode = _iconNode(inactiveIcon);\r\n    const bgIconContainerStyle = showInactive\r\n      ? {}\r\n      : {\r\n          display: \"inline-block\",\r\n          overflow: \"hidden\",\r\n          top: 0,\r\n          [direction === \"rtl\" ? \"left\" : \"right\"]: 0,\r\n          width: `${100 - percent}%`\r\n        };\r\n    const iconNode = _iconNode(activeIcon);\r\n    const iconContainerStyle = {\r\n      display: 'inline-block',\r\n      position: 'absolute',\r\n      overflow: 'hidden',\r\n      top: 0,\r\n      [direction === 'rtl' ? 'right' : 'left']: 0,\r\n      width: `${percent}%`\r\n    };\r\n    const style = {\r\n      cursor: !readonly ? 'pointer' : 'inherit',\r\n      display: 'inline-block',\r\n      position: 'relative'\r\n    };\r\n\r\n    function handleMouseMove(e) {\r\n      if (onMouseMove) {\r\n        onMouseMove(index, e);\r\n      }\r\n    }\r\n\r\n    function handleMouseClick(e) {\r\n      if (onClick) {\r\n        // [Supporting both TouchEvent and MouseEvent](https://developer.mozilla.org/en-US/docs/Web/API/Touch_events/Supporting_both_TouchEvent_and_MouseEvent)\r\n        // We must prevent firing click event twice on touch devices.\r\n        e.preventDefault();\r\n        onClick(index, e);\r\n      }\r\n    }\r\n\r\n    return (\r\n      <span\r\n        style={style}\r\n        onClick={handleMouseClick}\r\n        onMouseMove={handleMouseMove}\r\n        onTouchMove={handleMouseMove}\r\n        onTouchEnd={handleMouseClick}\r\n      >\r\n        <span style={bgIconContainerStyle}>\r\n          {backgroundNode}\r\n        </span>\r\n        <span style={iconContainerStyle}>\r\n          {iconNode}\r\n        </span>\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\n// Define propTypes only in development. They will be void in production.\r\nRatingSymbol.propTypes = typeof __DEV__ !== 'undefined' && __DEV__ && {\r\n  index: PropTypes.number.isRequired,\r\n  readonly: PropTypes.bool.isRequired,\r\n  inactiveIcon: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.object,\r\n    PropTypes.element\r\n  ]).isRequired,\r\n  activeIcon: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.object,\r\n    PropTypes.element\r\n  ]).isRequired,\r\n  percent: PropTypes.number.isRequired,\r\n  direction: PropTypes.string.isRequired,\r\n  showInactive: PropTypes.bool.isRequired,\r\n  onClick: PropTypes.func,\r\n  onMouseMove: PropTypes.func,\r\n  onTouchMove: PropTypes.func,\r\n  onTouchEnd: PropTypes.func\r\n};\r\n\r\nexport default RatingSymbol;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport Symbol from './RatingSymbol';\r\n\r\nclass Rating extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // Indicates the value that is displayed to the user in the form of symbols.\r\n      // It can be either 0 (for no displayed symbols) or (0, end]\r\n      displayValue: this.props.value,\r\n      // Indicates if the user is currently hovering over the rating element\r\n      interacting: false\r\n    };\r\n    this.onMouseLeave = this.onMouseLeave.bind(this);\r\n    this.symbolMouseMove = this.symbolMouseMove.bind(this);\r\n    this.symbolClick = this.symbolClick.bind(this);\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    const valueChanged = this.props.value !== nextProps.value;\r\n    this.setState((prevState) => ({\r\n      displayValue: valueChanged ? nextProps.value : prevState.displayValue\r\n    }));\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    // Ignore state update due to value changed from props.\r\n    // Usually originated through an onClick event.\r\n    if (prevProps.value !== this.props.value) {\r\n      return;\r\n    }\r\n\r\n    // When hover ends, call this.props.onHover with no value.\r\n    if (prevState.interacting && !this.state.interacting) {\r\n      return this.props.onHover();\r\n    }\r\n\r\n    // When hover over.\r\n    if (this.state.interacting) {\r\n      this.props.onHover(this.state.displayValue);\r\n    }\r\n  }\r\n\r\n  symbolClick(symbolIndex, event) {\r\n    const value = this.calculateDisplayValue(symbolIndex, event);\r\n    this.props.onClick(value, event);\r\n  }\r\n\r\n  symbolMouseMove(symbolIndex, event) {\r\n    const value = this.calculateDisplayValue(symbolIndex, event);\r\n    // This call should cause an update only if the state changes.\r\n    // Mainly the first time the mouse enters and whenever the value changes.\r\n    // So DidComponentUpdate is NOT called for every mouse movement.\r\n    this.setState({\r\n      interacting: !this.props.readonly,\r\n      displayValue: value\r\n    });\r\n  }\r\n\r\n  onMouseLeave() {\r\n    this.setState({\r\n      displayValue: this.props.value,\r\n      interacting: false\r\n    });\r\n  }\r\n\r\n  calculateDisplayValue(symbolIndex, event) {\r\n    const percentage = this.calculateHoverPercentage(event);\r\n    // Get the closest top fraction.\r\n    const fraction = Math.ceil(percentage % 1 * this.props.fractions) / this.props.fractions;\r\n    // Truncate decimal trying to avoid float precission issues.\r\n    const precision = 10 ** 3;\r\n    const displayValue =\r\n      symbolIndex + (Math.floor(percentage) + Math.floor(fraction * precision) / precision);\r\n    // ensure the returned value is greater than 0 and lower than totalSymbols\r\n    return displayValue > 0 ? displayValue > this.props.totalSymbols ? this.props.totalSymbols : displayValue : 1 / this.props.fractions;\r\n  }\r\n\r\n  calculateHoverPercentage(event) {\r\n    const clientX = event.nativeEvent.type.indexOf(\"touch\") > -1\r\n      ? event.nativeEvent.type.indexOf(\"touchend\") > -1\r\n        ? event.changedTouches[0].clientX\r\n        : event.touches[0].clientX\r\n      : event.clientX;\r\n\r\n    const targetRect = event.target.getBoundingClientRect();\r\n    const delta = this.props.direction === 'rtl'\r\n      ? targetRect.right - clientX\r\n      : clientX - targetRect.left;\r\n\r\n    // Returning 0 if the delta is negative solves the flickering issue\r\n    return delta < 0 ? 0 : delta / targetRect.width;\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      readonly,\r\n      quiet,\r\n      totalSymbols,\r\n      value,\r\n      placeholderValue,\r\n      direction,\r\n      showInactive,\r\n      emptySymbol,\r\n      fullSymbol,\r\n      placeholderSymbol,\r\n      className,\r\n      id,\r\n      style,\r\n      tabIndex\r\n    } = this.props;\r\n    const { displayValue, interacting } = this.state;\r\n    const symbolNodes = [];\r\n    const empty = [].concat(emptySymbol);\r\n    const full = [].concat(fullSymbol);\r\n    const placeholder = [].concat(placeholderSymbol);\r\n    const shouldDisplayPlaceholder =\r\n      placeholderValue !== 0 &&\r\n      value === 0 &&\r\n      !interacting;\r\n\r\n    // The value that will be used as base for calculating how to render the symbols\r\n    let renderedValue;\r\n    if (shouldDisplayPlaceholder) {\r\n      renderedValue = placeholderValue;\r\n    } else {\r\n      renderedValue = quiet ? value : displayValue;\r\n    }\r\n\r\n    // The amount of full symbols\r\n    const fullSymbols = Math.floor(renderedValue);\r\n\r\n    for (let i = 0; i < totalSymbols; i++) {\r\n      let percent;\r\n      // Calculate each symbol's fullness percentage\r\n      if (i - fullSymbols < 0) {\r\n        percent = 100;\r\n      } else if (i - fullSymbols === 0) {\r\n        percent = (renderedValue - i) * 100;\r\n      } else {\r\n        percent = 0;\r\n      }\r\n\r\n      symbolNodes.push(\r\n        <Symbol\r\n          key={i}\r\n          index={i}\r\n          readonly={readonly}\r\n          inactiveIcon={empty[i % empty.length]}\r\n          activeIcon={\r\n            shouldDisplayPlaceholder ? placeholder[i % full.length] : full[i % full.length]\r\n          }\r\n          percent={percent}\r\n          direction={direction}\r\n          showInactive={showInactive}\r\n          {...(!readonly && {\r\n            onClick: this.symbolClick,\r\n            onMouseMove: this.symbolMouseMove,\r\n            onTouchMove: this.symbolMouseMove,\r\n            onTouchEnd: this.symbolClick\r\n          })}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <span\r\n        id={id}\r\n        style={{...style, display: 'inline-block', direction }}\r\n        className={className}\r\n        tabIndex={tabIndex}\r\n        aria-label={this.props['aria-label']}\r\n        {...(!readonly && {\r\n          onMouseLeave: this.onMouseLeave\r\n        })}\r\n      >\r\n        {symbolNodes}\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\n// Define propTypes only in development.\r\nRating.propTypes = typeof __DEV__ !== 'undefined' && __DEV__ && {\r\n  totalSymbols: PropTypes.number.isRequired,\r\n  value: PropTypes.number.isRequired, // Always >= 0\r\n  placeholderValue: PropTypes.number.isRequired,\r\n  readonly: PropTypes.bool.isRequired,\r\n  quiet: PropTypes.bool.isRequired,\r\n  fractions: PropTypes.number.isRequired,\r\n  direction: PropTypes.string.isRequired,\r\n  showInactive: PropTypes.bool.isRequired,\r\n  emptySymbol: PropTypes.oneOfType([\r\n    // Array of class names and/or style objects.\r\n    PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.element])),\r\n    // Class names.\r\n    PropTypes.string,\r\n    // Style objects.\r\n    PropTypes.object,\r\n    // React element\r\n    PropTypes.element\r\n  ]).isRequired,\r\n  fullSymbol: PropTypes.oneOfType([\r\n    // Array of class names and/or style objects.\r\n    PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.element])),\r\n    // Class names.\r\n    PropTypes.string,\r\n    // Style objects.\r\n    PropTypes.object,\r\n    // React element\r\n    PropTypes.element\r\n  ]).isRequired,\r\n  placeholderSymbol: PropTypes.oneOfType([\r\n    // Array of class names and/or style objects.\r\n    PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.element])),\r\n    // Class names.\r\n    PropTypes.string,\r\n    // Style objects.\r\n    PropTypes.object,\r\n    // React element\r\n    PropTypes.element\r\n  ]),\r\n  onClick: PropTypes.func.isRequired,\r\n  onHover: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Rating;\r\n","function noop() {}\r\nnoop._name = 'react_rating_noop';\r\n\r\nexport default noop;\r\n","var style = {\r\n  display: 'inline-block',\r\n  borderRadius: '50%',\r\n  border: '5px double white',\r\n  width: 30,\r\n  height: 30\r\n};\r\n\r\nexport default {\r\n  empty: {\r\n    ...style,\r\n    backgroundColor: '#ccc'\r\n  },\r\n  full: {\r\n    ...style,\r\n    backgroundColor: 'black'\r\n  },\r\n  placeholder: {\r\n    ...style,\r\n    backgroundColor: 'red'\r\n  }\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport Rating from './Rating';\r\nimport noop from './utils/noop';\r\nimport Style from './utils/style';\r\n\r\nclass RatingAPILayer extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: props.initialRating\r\n    };\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.handleHover = this.handleHover.bind(this);\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    this.setState({\r\n      value: nextProps.initialRating\r\n    });\r\n  }\r\n\r\n  handleClick(value, e) {\r\n    const newValue = this.translateDisplayValueToValue(value);\r\n    this.props.onClick(newValue);\r\n    // Avoid calling setState if not necessary. Micro optimisation.\r\n    if (this.state.value !== newValue) {\r\n      // If we have a new value trigger onChange callback.\r\n      this.setState({\r\n        value: newValue\r\n      }, () => this.props.onChange(this.state.value));\r\n    }\r\n  }\r\n\r\n  handleHover(displayValue) {\r\n    const value = displayValue === undefined\r\n      ? displayValue\r\n      : this.translateDisplayValueToValue(displayValue);\r\n    this.props.onHover(value);\r\n  }\r\n\r\n  translateDisplayValueToValue(displayValue) {\r\n    const translatedValue = displayValue * this.props.step + this.props.start;\r\n    // minimum value cannot be equal to start, since it's exclusive\r\n    return translatedValue === this.props.start\r\n      ? translatedValue + 1 / this.props.fractions\r\n      : translatedValue;\r\n  }\r\n\r\n  tranlateValueToDisplayValue(value) {\r\n    if (value === undefined) {\r\n      return 0;\r\n    }\r\n    return (value - this.props.start) / this.props.step;\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      step,\r\n      emptySymbol,\r\n      fullSymbol,\r\n      placeholderSymbol,\r\n      readonly,\r\n      quiet,\r\n      fractions,\r\n      direction,\r\n      showInactive,\r\n      start,\r\n      stop,\r\n      id,\r\n      className,\r\n      style,\r\n      tabIndex\r\n    } = this.props;\r\n\r\n    function calculateTotalSymbols(start, stop, step) {\r\n      return Math.floor((stop - start) / step);\r\n    }\r\n\r\n    return (\r\n      <Rating\r\n        id={id}\r\n        style={style}\r\n        className={className}\r\n        tabIndex={tabIndex}\r\n        aria-label={this.props['aria-label']}\r\n        totalSymbols={calculateTotalSymbols(start, stop, step)}\r\n        value={this.tranlateValueToDisplayValue(this.state.value)}\r\n        placeholderValue={this.tranlateValueToDisplayValue(this.props.placeholderRating)}\r\n        readonly={readonly}\r\n        quiet={quiet}\r\n        fractions={fractions}\r\n        direction={direction}\r\n        showInactive={showInactive}\r\n        emptySymbol={emptySymbol}\r\n        fullSymbol={fullSymbol}\r\n        placeholderSymbol={placeholderSymbol}\r\n        onClick={this.handleClick}\r\n        onHover={this.handleHover}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nRatingAPILayer.defaultProps = {\r\n  start: 0,\r\n  stop: 5,\r\n  step: 1,\r\n  readonly: false,\r\n  quiet: false,\r\n  fractions: 1,\r\n  direction: 'ltr',\r\n  showInactive: true,\r\n  onHover: noop,\r\n  onClick: noop,\r\n  onChange: noop,\r\n  emptySymbol: Style.empty,\r\n  fullSymbol: Style.full,\r\n  placeholderSymbol: Style.placeholder\r\n};\r\n\r\n// Define propTypes only in development.\r\nRatingAPILayer.propTypes = typeof __DEV__ !== 'undefined' && __DEV__ && {\r\n  start: PropTypes.number,\r\n  stop: PropTypes.number,\r\n  step: PropTypes.number,\r\n  initialRating: PropTypes.number,\r\n  placeholderRating: PropTypes.number,\r\n  readonly: PropTypes.bool,\r\n  quiet: PropTypes.bool,\r\n  fractions: PropTypes.number,\r\n  direction: PropTypes.string,\r\n  showInactive: PropTypes.bool,\r\n  emptySymbol: PropTypes.oneOfType([\r\n    // Array of class names and/or style objects.\r\n    PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.element])),\r\n    // Class names.\r\n    PropTypes.string,\r\n    // Style objects.\r\n    PropTypes.object,\r\n    // React element\r\n    PropTypes.element\r\n  ]),\r\n  fullSymbol: PropTypes.oneOfType([\r\n    // Array of class names and/or style objects.\r\n    PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.element])),\r\n    // Class names.\r\n    PropTypes.string,\r\n    // Style objects.\r\n    PropTypes.object,\r\n    // React element\r\n    PropTypes.element\r\n  ]),\r\n  placeholderSymbol: PropTypes.oneOfType([\r\n    // Array of class names and/or style objects.\r\n    PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.element])),\r\n    // Class names.\r\n    PropTypes.string,\r\n    // Style objects.\r\n    PropTypes.object,\r\n    // React element\r\n    PropTypes.element\r\n  ]),\r\n  onHover: PropTypes.func,\r\n  onClick: PropTypes.func,\r\n  onChange: PropTypes.func\r\n};\r\n\r\nexport default RatingAPILayer;\r\n"],"names":["_iconNode","icon","React","isValidElement","_typeof","style","Object","prototype","toString","call","className","RatingSymbol","PureComponent","this","props","index","inactiveIcon","activeIcon","percent","direction","showInactive","readonly","onClick","onMouseMove","backgroundNode","bgIconContainerStyle","display","overflow","top","iconNode","iconContainerStyle","position","cursor","handleMouseMove","e","handleMouseClick","preventDefault","onTouchMove","onTouchEnd","Rating","state","displayValue","_this","value","interacting","onMouseLeave","bind","symbolMouseMove","symbolClick","nextProps","valueChanged","setState","prevState","prevProps","onHover","symbolIndex","event","calculateDisplayValue","percentage","calculateHoverPercentage","fraction","Math","ceil","fractions","precision","floor","totalSymbols","clientX","nativeEvent","type","indexOf","changedTouches","touches","targetRect","target","getBoundingClientRect","delta","right","left","width","renderedValue","quiet","placeholderValue","emptySymbol","fullSymbol","placeholderSymbol","id","tabIndex","symbolNodes","empty","concat","full","placeholder","shouldDisplayPlaceholder","fullSymbols","i","push","_Symbol","key","length","noop","_name","borderRadius","border","height","backgroundColor","RatingAPILayer","initialRating","handleClick","handleHover","newValue","translateDisplayValueToValue","_this2","onChange","undefined","translatedValue","step","start","stop","calculateTotalSymbols","tranlateValueToDisplayValue","placeholderRating","defaultProps","Style"],"mappings":"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"}